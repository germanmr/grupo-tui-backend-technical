openapi: "3.0.0"
info:
  version: 2.0.0
  title: Order API
paths:
  /order:
    post:
      summary: Api rest that allows us to order the "pilotes" of the great Miquel Montoro
      operationId: orderPilotes
      requestBody:
        description: A valid client, product, only "Pilotes" in stock for now, and a quantity bigger than one
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
            example:
              clientId: 1
              productId: 1
              quantity: 2
      responses:
        "200":
          description: Pilotes were successfully ordered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
                example:
                  orderNumber: a72253bb-9ac1-497e-b116-2a54ab618966
                  client:
                    clientId: 1
                    firstName: Esteve
                    lastName: Clerch
                    telephone: +34 972 123456
                    address:
                      country: Espa√±a
                      city: Das
                      street: Carrer Sant Eduar 1
                      postalCode: 17538
                  product:
                    productId: 1
                    name: PILOTES
                    price: 11.25
                  quantity: 2
                  orderTotal: 22.50
        "400":
          description: 400 error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: 1
                message: Bad request
        "404":
          description: 404 error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: 2
                message: Not Found
        "500":
          description: 500 error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: 3
                message: Some internal error
components:
  schemas:
    OrderRequest:
      type: object
      required:
        - clientId
        - productId
        - quantity
      properties:
        clientId:
          type: integer
          format: int64
          description: A valid Client code
        productId:
          type: integer
          format: int64
          description: A valid Product code
        quantity:
          type: integer
          format: int64
          minimum: 1
          description: A bigger than one number indicating quantity
    OrderResponse:
      type: object
      required:
        - orderNumber
        - client
        - product
        - quantity
        - orderTotal
      properties:
        orderNumber:
          type: string
          format: uuid
          description: The generated order number, uuid format
        client:
          $ref: '#/components/schemas/Client'
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int64
          description: The quantity of the product
        orderTotal:
          type: number
          format: float
          description: The monetary amount according to the price and quantity
    Client:
      type: object
      required:
        - clientId
        - firstName
        - lastName
        - telephone
        - deliveryAddress
      properties:
        clientId:
          type: integer
          format: int64
          description: The client for whom the product was order
        firstName:
          type: string
          description: Client's first name
        lastName:
          type: string
          description: Client's last name
        telephone:
          type: string
          description: Contact phone
        deliveryAddress:
          $ref: '#/components/schemas/Address'
    Address:
      type: object
      required:
        - street
        - postalCode
        - city
        - country
      properties:
        street:
          type: string
          description: The street with the number [floor-apartment number]
        postalCode:
          type: string
          description: Client's postal code
        city:
          type: string
          description: Client's city name
        country:
          type: string
          description: Contact phone
    Product:
      type: object
      required:
        - productId
        - name
        - price
      properties:
        productId:
          type: integer
          format: int64
          description: Product's code
        name:
          type: string
          description: Product's name
        price:
          type: number
          format: float
          description: Unit's product price
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: The error code
        message:
          type: string
          description: A detail of what went wrong